<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>70</x><y>20</y><w>270</w><h>250</h></coordinates><panel_attributes>Orden
--
idOrden: number
productos[]: Producto
contadorProductosAgregados: number
_contadorOrdenes: number_
_MAX_PRODUCTOS: number = 5_
--
Orden()
agregarProducto(producto)
calcularTotal(): number
mostrarOrden()
--
Responsibilities
-- Crear objetos Orden
*-- Administrar los productos de una orden*</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>540</x><y>40</y><w>210</w><h>150</h></coordinates><panel_attributes>VentasTest
--
Esto no es una clase.
Es la prueba de creacion
de objetos Producto y Orden
--
Responsibilities
-- Ejecutar la prueba de
 la aplicacion de ventas</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>70</x><y>330</y><w>250</w><h>250</h></coordinates><panel_attributes>Producto
--
idProducto: number
nombre: String
precio: number
_contadorProductos: number_
--
Producto()
getIdProducto(): number
getNombre(): string
setNombre(nombre)
getPrecio(): number
setPrecio(precio)
toString(): string
--
Responsibilities
*-- Crear objetos de tipo Producto*</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>100</y><w>230</w><h>30</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;10;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>180</x><y>260</y><w>240</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
&lt;&lt;Un Producto se agrega a una Orden&gt;&gt;</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element></diagram>