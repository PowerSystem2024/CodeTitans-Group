class DispositivoEntrada:
    def __init__(self, tipoEntrada, marca):
        self._tipoEntrada = tipoEntrada
        self._marca = marca

    # Métodos get y set para cada atributo
    def get_tipoEntrada(self):
        return self._tipoEntrada

    def set_tipoEntrada(self, tipoEntrada):
        self._tipoEntrada = tipoEntrada

    def get_marca(self):
        return self._marca

    def set_marca(self, marca):
        self._marca = marca

    # Método __str__ para representación en string
    def __str__(self):
        return f"DispositivoEntrada(tipoEntrada={self._tipoEntrada}, marca={self._marca})"


class Raton(DispositivoEntrada):
    contadorRatones = 0

    def __init__(self, tipoEntrada, marca):
        super().__init__(tipoEntrada, marca)
        Raton.contadorRatones += 1
        self._idRaton = Raton.contadorRatones

    def __str__(self):
        return f"Raton(idRaton={self._idRaton}, tipoEntrada={self._tipoEntrada}, marca={self._marca})"


class Teclado(DispositivoEntrada):
    contadorTeclados = 0

    def __init__(self, tipoEntrada, marca):
        super().__init__(tipoEntrada, marca)
        Teclado.contadorTeclados += 1
        self._idTeclado = Teclado.contadorTeclados

    def __str__(self):
        return f"Teclado(idTeclado={self._idTeclado}, tipoEntrada={self._tipoEntrada}, marca={self._marca})"


class Monitor:
    contadorMonitores = 0

    def __init__(self, marca, tamaño):
        Monitor.contadorMonitores += 1
        self._idMonitor = Monitor.contadorMonitores
        self._marca = marca
        self._tamaño = tamaño

    # Métodos get y set para cada atributo
    def get_marca(self):
        return self._marca

    def set_marca(self, marca):
        self._marca = marca

    def get_tamaño(self):
        return self._tamaño

    def set_tamaño(self, tamaño):
        self._tamaño = tamaño

    def __str__(self):
        return f"Monitor(idMonitor={self._idMonitor}, marca={self._marca}, tamaño={self._tamaño})"


class Computadora:
    contador_computadoras = 0

    def __init__(self, nombre, monitor, teclado, raton):
        Computadora.contador_computadoras += 1
        self._idComputadora = Computadora.contador_computadoras
        self._nombre = nombre
        self._monitor = monitor
        self._teclado = teclado
        self._raton = raton

    # Métodos get y set para cada atributo
    def get_nombre(self):
        return self._nombre

    def set_nombre(self, nombre):
        self._nombre = nombre

    def get_monitor(self):
        return self._monitor

    def set_monitor(self, monitor):
        self._monitor = monitor

    def get_teclado(self):
        return self._teclado

    def set_teclado(self, teclado):
        self._teclado = teclado

    def get_raton(self):
        return self._raton

    def set_raton(self, raton):
        self._raton = raton

    def __str__(self):
        return f"Computadora(idComputadora={self._idComputadora}, nombre={self._nombre}, monitor={self._monitor}, teclado={self._teclado}, raton={self._raton})"


class Orden:
    contadorOrdenes = 0

    def __init__(self):
        Orden.contadorOrdenes += 1
        self._idOrden = Orden.contadorOrdenes
        self._computadoras = []

    def agregarComputadora(self, computadora):
        self._computadoras.append(computadora)

    def __str__(self):
        computadoras_str = "\n".join(str(computadora) for computadora in self._computadoras)
        return f"Orden(idOrden={self._idOrden}, computadoras=[\n{computadoras_str}\n])"